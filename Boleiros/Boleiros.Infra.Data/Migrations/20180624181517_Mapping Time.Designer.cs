// <auto-generated />
using System;
using Boleiros.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Boleiros.Infra.Data.Migrations
{
    [DbContext(typeof(BoleirosContext))]
    [Migration("20180624181517_Mapping Time")]
    partial class MappingTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Boleiros.Domain.Entities.Bolao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_BOLAO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("IN_ATIVO");

                    b.Property<string>("Descricao")
                        .HasColumnName("DE_BOLAO");

                    b.Property<int?>("ID_CAMPEONATO")
                        .HasColumnName("ID_CAMPEONATO");

                    b.Property<string>("Nome")
                        .HasColumnName("NM_BOLAO");

                    b.HasKey("Id");

                    b.HasIndex("ID_CAMPEONATO");

                    b.ToTable("TB_BOLAO");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Campeonato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CAMPENATO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("IN_ATIVO");

                    b.Property<string>("Descricao")
                        .HasColumnName("DE_CAMPENATO");

                    b.Property<string>("Nome")
                        .HasColumnName("NM_CAMPENATO");

                    b.HasKey("Id");

                    b.ToTable("TB_CAMPEONATO");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_JOGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("IN_ATIVO");

                    b.Property<int?>("ID_MANDANTE");

                    b.Property<int?>("ID_RODADA");

                    b.Property<int?>("ID_VISITANTE");

                    b.HasKey("Id");

                    b.HasIndex("ID_MANDANTE");

                    b.HasIndex("ID_RODADA");

                    b.HasIndex("ID_VISITANTE");

                    b.ToTable("TB_JOGO");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Palpite", b =>
                {
                    b.Property<int>("IdJogo")
                        .HasColumnName("ID_JOGO");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("ID_USUARIO");

                    b.Property<bool>("Ativo")
                        .HasColumnName("IN_ATIVO");

                    b.Property<int>("NumeroGolMandante")
                        .HasColumnName("NU_GOL_MANDANTE");

                    b.Property<int>("NumeroGolVisitante")
                        .HasColumnName("NU_GOL_VISITANTE");

                    b.HasKey("IdJogo", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TB_PALPITE");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.PerfilUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ID_TIPO_PERFIL");

                    b.Property<int>("IdBolao")
                        .HasColumnName("ID_BOLAO");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("ID_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("ID_TIPO_PERFIL");

                    b.HasIndex("IdBolao");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TB_PERFIL_USUARIO");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Rodada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RODADA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("IN_ATIVO");

                    b.Property<string>("Descricao")
                        .HasColumnName("DE_RODADA");

                    b.Property<int?>("ID_CAMPEONATO");

                    b.Property<int>("Numero")
                        .HasColumnName("NU_RODADA");

                    b.HasKey("Id");

                    b.HasIndex("ID_CAMPEONATO");

                    b.ToTable("TB_RODADA");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIME")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("IN_ATIVO");

                    b.Property<string>("Descricao")
                        .HasColumnName("DE_TIME");

                    b.Property<string>("Nome")
                        .HasColumnName("NM_TIME");

                    b.Property<string>("Sigla")
                        .HasColumnName("NM_SIGLA");

                    b.HasKey("Id");

                    b.ToTable("TB_TIME");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.TipoPerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO_PERFIL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("IN_ATIVO");

                    b.Property<string>("Descricao")
                        .HasColumnName("DE_TIPO_PERFIL");

                    b.Property<string>("Nome")
                        .HasColumnName("NM_TIPO_PERFIL");

                    b.HasKey("Id");

                    b.ToTable("TB_TIPO_PERFIL");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_USUARIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Nome")
                        .HasColumnName("NM_USUARIO");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Bolao", b =>
                {
                    b.HasOne("Boleiros.Domain.Entities.Campeonato", "Campeonato")
                        .WithMany("Boloes")
                        .HasForeignKey("ID_CAMPEONATO")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Jogo", b =>
                {
                    b.HasOne("Boleiros.Domain.Entities.Time", "Mandante")
                        .WithMany("JogosMandante")
                        .HasForeignKey("ID_MANDANTE")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Boleiros.Domain.Entities.Rodada", "Rodada")
                        .WithMany("Jogos")
                        .HasForeignKey("ID_RODADA")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Boleiros.Domain.Entities.Time", "Visitante")
                        .WithMany("JogosVisitante")
                        .HasForeignKey("ID_VISITANTE")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Palpite", b =>
                {
                    b.HasOne("Boleiros.Domain.Entities.Jogo", "Jogo")
                        .WithMany("Palpites")
                        .HasForeignKey("IdJogo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Boleiros.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Palpites")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.PerfilUsuario", b =>
                {
                    b.HasOne("Boleiros.Domain.Entities.TipoPerfil", "TipoPerfil")
                        .WithMany("PerfilUsuarios")
                        .HasForeignKey("ID_TIPO_PERFIL")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Boleiros.Domain.Entities.Bolao", "Bolao")
                        .WithMany("PerfisUsuario")
                        .HasForeignKey("IdBolao")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Boleiros.Domain.Entities.Usuario", "Usuario")
                        .WithMany("PerfisUsuario")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Boleiros.Domain.Entities.Rodada", b =>
                {
                    b.HasOne("Boleiros.Domain.Entities.Campeonato", "Campeonato")
                        .WithMany("Rodadas")
                        .HasForeignKey("ID_CAMPEONATO");
                });
#pragma warning restore 612, 618
        }
    }
}
